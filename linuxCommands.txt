https://tldr.sh/ -> gives usage eg for commands
man     -> tells about every other command
ls -> gives list of files
ls -1 -> list files in new line
ls -l -> list files with lots of details
mkdir -> creates folders
mkdir -p "path" -> creates nested folders recursively
mkdir fold1 fold2 -> creates multiple folders in one go
cd -> change directory
rm -> removes folders which dont have files
rm -rf -> removes folders and its contents(DANGEROUS)
"cd -" -> to go to previsously chosen directory
pwd -> prints present working directory
mv file1 file2 pathToFolder -> moves selected files to given folder
cp sourceFile newFile -> creates copy of given sourceFile
cp -r sourceFolder newFolder -> creates copy of a folder with its contents recursively
touch file -> Creates and empty file. If the file already exists, it opens the file in write mode and the timestamp of the file is updated.

find command
use
-type f
to search only files, or
-type l
to only search symbolic links.
-name -> case sensitive
-iname -> case insensitive

find . -name "*.txt" -> searches for files with given extension in complete directory tree and gives there relative path
find . -type d -name "junk*" -> find directories with matching expression in current tree
find folder1 folder2 -name filename.txt -> for searching in multiple trees
find . -type d -name 

#Compressing a file
gzip file.ext -> compresses
gzip -d file.ext.gz -> decompress

## for specifiying output names
gzip -c file.ext > compressed_file.ext.gz 
gzip -c -d file.ext.gz > uncompressed_file.ext 

## for specifying level of compression
### 1 -> fastest(worst)
### 9 -> slowest(best)
gzip -9 -c file.ext > compressed_file.ext.gz

## compressing all files in a directory(DANGEROUS)
gzip -r a_folder

# tar
used to create an archive grouping multiple files to a single file
## -cf -> for creating tar
## -xf -> for extracting from tar
eg->
tar -cf archive.tar file1 file2 
tar -xf archive.tar
## to extract to specific directory
tar -xf archive.tar -C directory

# cat
##Print the contents of a file to the standard output:
cat file
##Concatenate several files into the target file:
cat file1 file2 > target_file

##Append several files into the target file:
cat file1 file2 >> target_file

##Number all output lines:
cat -n file

## cat can be used with pipes as input for some other command
eg ->
cat file | anotherCommand

# wc
## Count lines in file:
wc -l file

## Count words in file:
wc -w file

## Count characters (bytes) in file:
wc -c file

## Count characters in file (taking multi-byte character sets into account):
wc -m file

## Use standard input to count lines, words and characters (bytes) in that order:
find . | wc

# grep
# sort
  ## Sort a file in ascending order:
    sort path/to/file

  ## Sort a file in descending order:
    sort --reverse path/to/file

  ## Sort a file in case-insensitive way:
    sort --ignore-case path/to/file

  ## Sort a file using numeric rather than alphabetic order:
    sort --numeric-sort path/to/file

  ## Sort /etc/passwd by the 3rd field of each line numerically, using ":" as a field separator:
    sort --field-separator=: --key=3n /etc/passwd

  ## Sort a file preserving only unique lines:
    sort --unique path/to/file

  ## Sort a file, printing the output to the specified output file (can be used to sort a file in-place):
    sort --output=path/to/file path/to/file

  ## Sort numbers with exponents:
    sort --general-numeric-sort path/to/file